source('~/.active-rstudio-document')
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankhospital_new.R')
rankhospital("NC","heart attack",1)
rankhospital("NC","heart attack",2)
rankhospital("NC","heart attack",24)
rankhospital("NC","heart attack",25)
rankhospital("NC","heart attack",0)
rankhospital("NC","heart attack",-1)
rankhospital("NC","heart attack","best")
rankhospital("NC","heart attack","worst")
rankhospital("NC","heart attack","worst")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankhospital_new.R')
rankhospital("NC","heart attack","worst")
rankhospital("NC","heart attack",25)
rankhospital("NC","heart attack",25)
#Write a function called rankhospital that takes three arguments: the 2-character
#abbreviated name of a state (state), an outcome (outcome), and the ranking of a
#hospital in that state for that outcome (num).
#rank hospitals by outcome in state
# Finding rank of hospital in a state
rankhospital <- function(state, outcome, ranking) {
outcome_data <- read.csv("rprog_data3/outcome-of-care-measures.csv", colClasses = "character")
outcome_extract <- subset(outcome_data[,1:24])
outcome_extract[, 11] <- suppressWarnings(as.numeric(outcome_extract[, 11]))
outcome_extract[, 17] <- suppressWarnings(as.numeric(outcome_extract[, 17]))
outcome_extract[, 23] <- suppressWarnings(as.numeric(outcome_extract[, 23]))
hospitals <- read.csv("rprog_data3/hospital-data.csv", colClasses = "character")
allstates <- sort(unique(hospitals[,7]))
if(typeof(ranking) == "character") {
ranking <- tolower(ranking)
if(ranking == "best"){
xrank <- 1
} else if(tolower(ranking) == "worst") {
xrank <- "worst"
#print("setting xrank to worst")
} else {
stop("invalid RANKING")
}
} else {
if(ranking < 1) {
stop("invalid RANKING")
} else {
xrank <- as.integer(ranking)
}
}
if(typeof(state) != "character") {
stop("invalid STATE")
} else {
xstate <- toupper(state)
}
validState <- xstate %in% allstates
if(!(validState)){
stop("invalid STATE")
}
selectnumber <- 0
if(outcome == "heart attack") {
selectnumber <- 11
} else if(outcome == "heart failure") {
selectnumber <- 17
} else if(outcome == "pneumonia") {
selectnumber <- 23
} else {
stop("invalid OUTCOME")
}
myhospitalset <- subset(outcome_extract,outcome_extract[,7] == "NC")
# sort on rank and hospital name
myselection <- subset(myhospitalset,!is.na(myhospitalset[,11]))
#myselection <- myselection[order(myselection$Hospital.Name),]
myselection <- myselection[order(myselection[,11], myselection[,2]),]
mylength <- length(myselection)
##Get rankings
# print(mylength)
if(xrank > mylength){
stop("invalid RANKING")
}
if(xrank == "worst") {
xrank <- mylength
print(xrank)
}
hospitalname <- myselection[xrank,2]
return(hospitalname)
}
rankhospital("NC","heart attack","worst")
rankhospital("NC","heart attack",2)
rankhospital("NC","heart attack","worst")
source('~/.active-rstudio-document')
rankhospital("NC","heart attack","worst")
rankhospital <- function(state, outcome, ranking) {
outcome_data <- read.csv("rprog_data3/outcome-of-care-measures.csv", colClasses = "character")
outcome_extract <- subset(outcome_data[,1:24])
outcome_extract[, 11] <- suppressWarnings(as.numeric(outcome_extract[, 11]))
outcome_extract[, 17] <- suppressWarnings(as.numeric(outcome_extract[, 17]))
outcome_extract[, 23] <- suppressWarnings(as.numeric(outcome_extract[, 23]))
hospitals <- read.csv("rprog_data3/hospital-data.csv", colClasses = "character")
allstates <- sort(unique(hospitals[,7]))
if(typeof(ranking) == "character") {
ranking <- tolower(ranking)
if(ranking == "best"){
xrank <- 1
} else if(ranking == "worst") {
xrank <- "worst"
print("setting xrank to worst")
} else {
stop("invalid RANKING")
}
} else {
if(ranking < 1) {
stop("invalid RANKING")
} else {
xrank <- as.integer(ranking)
}
}
print("xrank is now")
print(xrank)
if(typeof(state) != "character") {
stop("invalid STATE")
} else {
xstate <- toupper(state)
}
validState <- xstate %in% allstates
if(!(validState)){
stop("invalid STATE")
}
selectnumber <- 0
if(outcome == "heart attack") {
selectnumber <- 11
} else if(outcome == "heart failure") {
selectnumber <- 17
} else if(outcome == "pneumonia") {
selectnumber <- 23
} else {
stop("invalid OUTCOME")
}
myhospitalset <- subset(outcome_extract,outcome_extract[,7] == "NC")
# sort on rank and hospital name
myselection <- subset(myhospitalset,!is.na(myhospitalset[,11]))
#myselection <- myselection[order(myselection$Hospital.Name),]
myselection <- myselection[order(myselection[,11], myselection[,2]),]
mylength <- length(myselection)
##Get rankings
# print(mylength)
if(xrank > mylength){
stop("invalid RANKING")
}
if(xrank == "worst") {
xrank <- mylength
print(xrank)
}
hospitalname <- myselection[xrank,2]
return(hospitalname)
}
rankhospital("NC","heart attack","worst")
source('~/.active-rstudio-document')
rankhospital("NC","heart attack","worst")
source('~/.active-rstudio-document')
rankhospital("NC","heart attack","worst")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankhospital_new.R')
rankhospital("NC","heart attack","worst")
rankhospital("NC","heart attack")
rankhospital("NC","heart attack",13)
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankhospital_new.R')
rankhospital("NC","heart attack",13)
rankhospital("MD","heart attack",13)
rankhospital("ZZ","heart attack",13)
rankhospital("NJ","heart attack",13)
rankhospital("ny","heart attack",13)
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankhospital_new.R')
rankhospital("ny","heart attack",13)
rankhospital("NC","heart attack",24)
rankhospital("NC","heart attack",1)
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankhospital.R')
rankhospital("TX", "heart failure", 4000)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
submit()
submit()
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankhospital.R')
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "pneumonia", 1000)
submit()
submit()
rankhospital("WA", "pneumonia", 1000)
rankhospital("NC", "heart attack", "worst")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankhospital.R')
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankhospital.R')
rankhospital("NC", "heart attack", "worst")
submit()
xstate < "NC"
xstate <- "NC"
selectnumber <- 11
myhospitalset <- subset(outcome_extract,outcome_extract[,7] == xstate)
# sort on rank and hospital name
myselection <- subset(myhospitalset,!is.na(myhospitalset[,selectnumber]))
#myselection <- myselection[order(myselection$Hospital.Name),]
myselection <- myselection[order(myselection[,selectnumber], myselection[,2]),]
mylength <- length(myselection)
mylength
myselection[,11]
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankhospital.R')
rankhospital("NC", "heart attack", "worst")
myselection[22:24,2]
myselection[22:24,11]
myselection[22:24,7]
myselection[22:24,2]
myselection[22:24,11]
myselection[,7]
tail(myselection[,2])
myselection[,11]
myselection[,12]
myselection[,23]
tail(myselection[,2],1)
myselection[83,2]
myhospitalset <- subset(outcome_extract,outcome_extract[,7] == xstate)
# sort on rank and hospital name
myselection <- subset(myhospitalset,!is.na(myhospitalset[,selectnumber]))
#myselection <- myselection[order(myselection$Hospital.Name),]
myselection <- myselection[order(myselection[,selectnumber],]
#myselection <- myselection[order(myselection[,selectnumber], myselection[,2]),]
mylength <- length(myselection)
myhospitalset <- subset(outcome_extract,outcome_extract[,7] == xstate)
# sort on rank and hospital name
myselection <- subset(myhospitalset,!is.na(myhospitalset[,selectnumber]))
#myselection <- myselection[order(myselection$Hospital.Name),]
myselection <- myselection[order(myselection[,selectnumber]),]
#myselection <- myselection[order(myselection[,selectnumber], myselection[,2]),]
mylength <- length(myselection)
tail(myselection[,11])
tail(myselection[,11],1)
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankhospital.R')
submit()
length(myselection)
myselection[,11]
myselection[,2]
myselection[,2:11]
myselection[,1:2]
rankhospital("NC", "heart attack", "worst")
myselection[24,1:2]
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankhospital.R')
submit()
rankhospital("NC", "heart attack", "worst")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankhospital.R')
submit()
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankhospital.R')
rankhospital("NC", "heart attack", "worst")
submit()
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankhospital.R')
xstate <- "NC"
selectnumber <- 11
myhospitalset <- subset(outcome_extract,outcome_extract[,7] == xstate)
# sort on rank and hospital name
myselection <- subset(myhospitalset,!is.na(myhospitalset[,selectnumber]))
#myselection <- myselection[order(myselection$Hospital.Name),]
#myselection <- myselection[order(myselection[,selectnumber]),]
myselection <- myselection[order(myselection[,selectnumber], myselection[,2]),]
mylength <- length(myselection)
hospitalname <- tail(myselection[,2],1)
hospitalname
hospitalname[1,2]
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("NC", "heart attack")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("NC", "heart attack")
outcome_data <- read.csv("rprog_data3/outcome-of-care-measures.csv", colClasses = "character")
outcome_extract <- subset(outcome_data[,1:24])
outcome_extract[, 11] <- suppressWarnings(as.numeric(outcome_extract[, 11]))
outcome_extract[, 17] <- suppressWarnings(as.numeric(outcome_extract[, 17]))
outcome_extract[, 23] <- suppressWarnings(as.numeric(outcome_extract[, 23]))
hospitals <- read.csv("rprog_data3/hospital-data.csv", colClasses = "character")
allstates <- sort(unique(hospitals[,7]))
myhospitalset <- subset(outcome_extract,outcome_extract[,7] == xstate)
# sort on rank and hospital name
myselection <- subset(myhospitalset,!is.na(myhospitalset[,selectnumber]))
#myselection <- myselection[order(myselection$Hospital.Name),]
myselection <- myselection[order(myselection[,selectnumber]),]
#myselection <- myselection[order(myselection[,selectnumber], myselection[,2]),]
mylength <- length(myselection)
hospitalname
hospitalname <- myselection[xrank,2:7]
hospitalname
print(hospitalname)
print(hospitalname[,2],hospitalname[,7])
print(hospitalname$Hospital.Name, hospitalname$State)
print(hospitalname$Hospital.Name)
print((hospitalname$Hospital.Name),(hospital$State))
print((hospitalname$Hospital.Name),(hospitalname$State))
tail(str(hospitalname))
print(hospitalname$Hospital.Name)
print(hospitalname$State)
# Finding rank of hospital in a state
rankall <- function(outcome, ranking = "best") {
selectnumber <- 0
if(outcome == "heart attack") {
selectnumber <- 11
} else if(outcome == "heart failure") {
selectnumber <- 17
} else if(outcome == "pneumonia") {
selectnumber <- 23
} else {
stop("invalid outcome")
if(typeof(ranking) == "character") {
ranking <- tolower(ranking)
if(ranking == "best"){
xrank <- 1
} else if(ranking == "worst") {
xrank <- "worst"
#print("setting xrank to worst")
} else {
stop("invalid ranking")
}
} else {
if(ranking < 1) {
stop("invalid ranking")
} else {
xrank <- as.integer(ranking)
}
}
xstate <- "NC"
outcome_data <- read.csv("rprog_data3/outcome-of-care-measures.csv", colClasses = "character")
outcome_extract <- subset(outcome_data[,1:24])
outcome_extract[, 11] <- suppressWarnings(as.numeric(outcome_extract[, 11]))
outcome_extract[, 17] <- suppressWarnings(as.numeric(outcome_extract[, 17]))
outcome_extract[, 23] <- suppressWarnings(as.numeric(outcome_extract[, 23]))
hospitals <- read.csv("rprog_data3/hospital-data.csv", colClasses = "character")
allstates <- sort(unique(hospitals[,7]))
statelength <- length(allstates)
#for i
myhospitalset <- subset(outcome_extract,outcome_extract[,7] == xstate)
# sort on rank and hospital name
myselection <- subset(myhospitalset,!is.na(myhospitalset[,selectnumber]))
#myselection <- myselection[order(myselection$Hospital.Name),]
myselection <- myselection[order(myselection[,selectnumber]),]
#myselection <- myselection[order(myselection[,selectnumber], myselection[,2]),]
mylength <- length(myselection)
hospitalname <- myselection[xrank,2:7]
print(hospitalname$Hospital.Name)
print(hospitalname$State)
}
return(hospitalname)
}
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack","best")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("NC", "heart attack")
rankall("heart attack", "best)
""
"
rankall("heart attack", "best")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack", "best")
rankall("heart attack")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack")
myhospitalset <- subset(outcome_extract,outcome_extract[,7] == xstate)
# sort on rank and hospital name
myselection <- subset(myhospitalset,!is.na(myhospitalset[,selectnumber]))
#myselection <- myselection[order(myselection$Hospital.Name),]
myselection <- myselection[order(myselection[,selectnumber]),]
#myselection <- myselection[order(myselection[,selectnumber], myselection[,2]),]
mylength <- length(myselection)
if(xrank == "worst") {
hospitalchoice <- tail(myselection,1)
#print(xrank)
} else {
hospitalchoice <- myselection[xrank,2:4]
}
hname <- (hospitalchoice$Hospital.Name)
#hstate <- (hospitalchoice$State)
queryAnswer <- c(hname,hstate)
#print(queryAnswer)
print(myselection)
xstate <- "NC"
outcome_data <- read.csv("rprog_data3/outcome-of-care-measures.csv", colClasses = "character")
outcome_extract <- subset(outcome_data[,1:24])
outcome_extract[, 11] <- suppressWarnings(as.numeric(outcome_extract[, 11]))
outcome_extract[, 17] <- suppressWarnings(as.numeric(outcome_extract[, 17]))
outcome_extract[, 23] <- suppressWarnings(as.numeric(outcome_extract[, 23]))
hospitals <- read.csv("rprog_data3/hospital-data.csv", colClasses = "character")
allstates <- sort(unique(hospitals[,7]))
statelength <- length(allstates)
#for i
myhospitalset <- subset(outcome_extract,outcome_extract[,7] == xstate)
# sort on rank and hospital name
myselection <- subset(myhospitalset,!is.na(myhospitalset[,selectnumber]))
#myselection <- myselection[order(myselection$Hospital.Name),]
myselection <- myselection[order(myselection[,selectnumber]),]
#myselection <- myselection[order(myselection[,selectnumber], myselection[,2]),]
mylength <- length(myselection)
if(xrank == "worst") {
hospitalchoice <- tail(myselection,1)
#print(xrank)
} else {
hospitalchoice <- myselection[xrank,2:4]
}
hname <- (hospitalchoice$Hospital.Name)
hstate <- (hospitalchoice$State)
queryAnswer <- c(hname,hstate)
print(queryAnswer)
}
return()
xstate <- "NC"
outcome_data <- read.csv("rprog_data3/outcome-of-care-measures.csv", colClasses = "character")
outcome_extract <- subset(outcome_data[,1:24])
outcome_extract[, 11] <- suppressWarnings(as.numeric(outcome_extract[, 11]))
outcome_extract[, 17] <- suppressWarnings(as.numeric(outcome_extract[, 17]))
outcome_extract[, 23] <- suppressWarnings(as.numeric(outcome_extract[, 23]))
hospitals <- read.csv("rprog_data3/hospital-data.csv", colClasses = "character")
allstates <- sort(unique(hospitals[,7]))
statelength <- length(allstates)
#for i
myhospitalset <- subset(outcome_extract,outcome_extract[,7] == xstate)
# sort on rank and hospital name
myselection <- subset(myhospitalset,!is.na(myhospitalset[,selectnumber]))
#myselection <- myselection[order(myselection$Hospital.Name),]
myselection <- myselection[order(myselection[,selectnumber]),]
#myselection <- myselection[order(myselection[,selectnumber], myselection[,2]),]
mylength <- length(myselection)
if(xrank == "worst") {
hospitalchoice <- tail(myselection,1)
#print(xrank)
} else {
hospitalchoice <- myselection[xrank,2:4]
}
hname <- (hospitalchoice$Hospital.Name)
hstate <- (hospitalchoice$State)
queryAnswer <- c(hname,hstate)
print(queryAnswer)
}
}
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack","best")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack", "best")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack","best")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack", "best")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack","best")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack","best")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack","best")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart failure", "best")
rankall("heart failure", "worst")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack","best")
rankall("heart attack","worst")
rankall("heart attack",12)
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack",1)
head(rankall("heart attack",1),3)
myhead <- rankall("heart attack",1)
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
submit()
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/complete.R')
complete("./specdata")
complete("./specdata",1:3)
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack","best")
rankall("heart attack","worst")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack", "best")
rankall("heart attack", "worst")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack","best")
rankall("heart attack","worst")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack","best")
rankall("heart attack","best")
rankall("heart attack","worst")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack,"worst"")
rankall("heart attack","worst")
rankall("heart attack","best")
rankall("heart attack","worst")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack","worst")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack","best")
rankall("heart attack","worst")
submit()
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart failure","best")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart failure", "best")
rankall("heart failure", "best")
rankall("heart failure", "best")
submit()
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
rankall("heart attack","best")
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankall.R')
submit()
submit()
submit()
source('C:/cygwin64/home/Tony/Github/samples_edu/HOME/rankhospital.R')
submit()
swirl()
install.packages("swirl")
library(swirl)
swirl()
